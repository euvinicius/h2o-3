#! /usr/bin/groovy
// -*- mode: groovy -*-
// Jenkins pipeline
// See documents at https://jenkins.io/doc/book/pipeline/jenkinsfile/

def TARGET_JOB = 'michalr-hadoop-docker-test'
def DISTRIBUTION_CDH = 'cdh'
def DISTRIBUTION_HDP = 'hdp'

def buildMatrix = [
        ['enabled': true, 'distribution': DISTRIBUTION_CDH, 'version': '5.4'],
        ['enabled': true, 'distribution': DISTRIBUTION_CDH, 'version': '5.5'],
        ['enabled': true, 'distribution': DISTRIBUTION_CDH, 'version': '5.6'],
        ['enabled': true, 'distribution': DISTRIBUTION_CDH, 'version': '5.8'],
        ['enabled': true, 'distribution': DISTRIBUTION_CDH, 'version': '5.10'],

        ['enabled': true, 'distribution': DISTRIBUTION_HDP, 'version': '2.2'],
        ['enabled': true, 'distribution': DISTRIBUTION_HDP, 'version': '2.3'],
        ['enabled': true, 'distribution': DISTRIBUTION_HDP, 'version': '2.4'],
        ['enabled': true, 'distribution': DISTRIBUTION_HDP, 'version': '2.5'],
        ['enabled': true, 'distribution': DISTRIBUTION_HDP, 'version': '2.6'],
]

def getBuildName(conf) {
    return "${conf['distribution'].toUpperCase()} ${conf['version']}"
}

parallel(buildMatrix.findAll { it['enabled'] }.collectEntries { c ->
    [(getBuildName(c)): {
        stage(getBuildName(c)) {
            build job: TARGET_JOB,
                    parameters: [
                            string(name: 'version', value: c['version']),
                            string(name: 'distribution', value: c['distribution'])
                    ],
                    propagate: true,
                    wait: true
        }
    }]
})
