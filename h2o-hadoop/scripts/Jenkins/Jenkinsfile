#! /usr/bin/groovy

def AGENT_LABEL = 'mr-0xc10'

pipeline {
  agent none

  parameters {
      string(name: 'version', description: 'CDH or HDP version')
      choice(
              choices: 'cdh\nhdp',
              description: 'Hadoop Distribution',
              name: 'distribution')
  }

  options {
    ansiColor('xterm')
    timestamps()
    buildDiscarder(logRotator(daysToKeepStr: '25'))
  }

  stages {
    stage('Execute Tests') {
      agent {
        dockerfile {
          label AGENT_LABEL
          filename "h2o-hadoop/scripts/docker/${params.distribution}/Dockerfile"
          additionalBuildArgs """--build-arg VERSION=${params.version} \
            --build-arg PATH_PREFIX=h2o-hadoop/scripts/docker/${params.distribution} \
            --build-arg DEFAULT_USER_UID=\$(id -u)"""
          args """-u root \
            -v \${WORKSPACE}:/home/h2o/h2o-3 \
            -v \${WORKSPACE}/h2o-hadoop/scripts/docker/common/custom_startup/:/startup/
            -e H2O_DOWNLOAD_TIMEOUT=2m"""
          reuseNode true
        }
      }
      steps {
        timeout (time:45, unit:'MINUTES') {
          sh "/usr/sbin/startup.sh"
        }
      }
    }
  }

  post {
    failure {
      emailext (
        subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
        body: """
          <p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
          <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>
        """,
        to: "michalr@h2o.ai"
      )
    }
  }
}
